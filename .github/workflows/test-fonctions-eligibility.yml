name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      # Installation de Deno
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      #Install Supabase CLI
      - name: Install Supabase CLI
        run: |
          wget -q https://github.com/supabase/cli/releases/download/v2.13.4/supabase_linux_amd64.tar.gz
          tar -xzf supabase_linux_amd64.tar.gz
          sudo mv supabase /usr/local/bin/
          sudo chmod +x /usr/local/bin/supabase                                                                                                                       

      - name: Create Supabase directory structure
        run: |                                                                                                                                                     
          mkdir -p supabase/migrations                                                                                                                             
          mkdir -p supabase/seeds                                                                                                                                  
          cp migrations/* supabase/migrations/                                                                                                                     
          cp seeds/* supabase/seeds/                                                                                                                                
          cp config.toml supabase/config.toml

      # Link du projet supabase
      - name: "Link du projet supabase"
        run: |
          supabase link --password ${{ secrets.SUPABASE_DB_PASSWORD }} --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}

      # Démarrage de Supabase et reset de la base
      - name: Start Supabase and reset database
        run: |                                                                                                                                                     
          supabase start --workdir .                                                                                                                                           
          supabase db reset --workdir .

      - name: Apply migrations
        run: |
          supabase migration up --workdir .

      # Exécution des tests
      - name: Run tests
        run: |                                                                                                                                                     
          deno test --allow-env --allow-read --allow-net functions/tests/check_eligibility-test.ts                                                                 

      # Arrêt de Supabase
      - name: Stop Supabase
        if: always()
        run: |
          supabase stop                                                                                                                                            

      - name: Send email on failure
        if: failure()
        uses: resend/resend-github-action@v0.2.0
        with:
          api_key: ${{ secrets.RESEND_API_KEY }}
          from: "GitHub Actions <onboarding@resend.dev>"
          to: "bastien.metais@gmail.com"
          subject: "❌ Tests failed on LaTroupeCastor"
          body: "Les tests ont échoué sur la branche ${{ github.ref }}. Voir les logs : ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{github.run_id }}"
